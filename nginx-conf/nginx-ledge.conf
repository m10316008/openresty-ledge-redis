#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  text/html;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    #lua_package_path  "/usr/local/openresty/nginx/conf/lua/?.lua;;";

    if_modified_since Off;
    lua_check_client_abort On;

    init_by_lua_block {
        require("ledge").configure({
            redis_connector_params = {
                url = "redis://redis:6379/0",
                password = "changeit",
            },
        })

        require("ledge").set_handler_defaults({
            upstream_host = "origin",
            upstream_port = 8080,
        })
    }

    init_worker_by_lua_block {
        require("ledge").create_worker():run()
    }

    server {
        lua_code_cache on;

        listen       80;
        server_name  localhost;

        listen 443 http2 ssl;

        ssl_certificate      ssl/nginx.crt;
        ssl_certificate_key  ssl/nginx.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {

            resolver 127.0.0.11 ipv6=off;

            content_by_lua_block {
                require("ledge").create_handler():run()
            }

            gzip            on;
            gzip_min_length 1000;
            gzip_proxied    any;
            gzip_types      *;

        }

    }

}
